<link type='text/css' href='/stylesheets/search.css' rel='stylesheet' media='screen' />

:javascript
  $(document).ready(function(){
    var currentPosition = 0;
    var slideWidth = 1000;
    var slides = $('.slide2');
    var numberOfSlides = slides.length;

    // Remove scrollbar in JS
    $('#slidesContainer2').css('overflow', 'hidden');

    // Wrap all .slides with #slideInner div
    slides
    .wrapAll('<div id="slideInner2"></div>')
    // Float left to display horizontally, readjust .slides width
    .css({
      'float' : 'left',
      'width' : slideWidth
    });

    // Set #slideInner width equal to total width of all slides
    $('#slideInner2').css('width', slideWidth * numberOfSlides);

    // Insert left and right arrow controls in the DOM
    $('#slideshow2')
      .prepend('<span class="control2" id="leftControl2">Move left</span>')
      .append('<span class="control2" id="rightControl2">Move right</span>');

    // Hide left arrow control on first load
    manageControls(currentPosition);

    // Create event listeners for .controls clicks
    $('.control2')
      .bind('click', function(){
      // Determine new position
        currentPosition = ($(this).attr('id')=='rightControl2')
      ? currentPosition+1 : currentPosition-1;

        // Hide / show controls
        manageControls(currentPosition);
        // Move slideInner using margin-left
        $('#slideInner2').animate({
          'marginLeft' : slideWidth*(-currentPosition),
        }, 400);
      });

    // manageControls: Hides and shows controls depending on currentPosition
    function manageControls(position){
      // Hide left arrow if position is first slide
      if(position==0){ $('#leftControl2').hide() }
      else{ $('#leftControl2').show() }
      // Hide right arrow if position is last slide
      if(position==numberOfSlides-1){ $('#rightControl2').hide() }
      else{ $('#rightControl2').show() }
      }
    });


#alert
#searchwidget.searchstyles
  #searchwidgetmid
    #slideshow2
      #slidesContainer2
        .slide2
          -if @student_file.applyable_type == "Company"
            = render :partial => "companies/summary_card", :locals => {:company => @student_file.applyable}
          -elsif @student_file.applyable_type == "Job"
            = render :partial => "jobs/summary_card", :locals => {:job => @student_file.applyable}
          
          .ratingwidget
            = render :partial => "shared/vote", :locals => {:voteable => @student_file.applyable, :vote => @student_file.vote}
            = render :partial => "shared/star", :locals => {:entity => @student_file.applyable, :starred => @student_file.starred}


          -#.ratingwidget
            %a{"data-remote" => "true", :href => "/vote/Job/15/-1"}
              .downlike
            %a{"data-remote" => "true", :href => "/vote/Job/15/1"}
              .uplike
            %a{"data-remote" => "true", :href => "/star/Job/15.js"}
              .star
        .slide2
          .itemtitle
            Company that you will be working for
          .itemcontent
            Sample content2
          .ratingwidget
            %a{"data-remote" => "true", :href => "/vote/Job/15/-1"}
              .downlike
            %a{"data-remote" => "true", :href => "/vote/Job/15/1"}
              .uplike
            %a{"data-remote" => "true", :href => "/star/Job/15.js"}
              .star
        .slide2
          .itemtitle
            Company that you will be working for
          .itemcontent
            Sample content3
          .ratingwidget
            %a{"data-remote" => "true", :href => "/vote/Job/15/-1"}
              .downlike
            %a{"data-remote" => "true", :href => "/vote/Job/15/1"}
              .uplike
            %a{"data-remote" => "true", :href => "/star/Job/15.js"}
              .star
  #rating


<!--BOTTOM-->


:javascript
  var i=2
  $('.moving').bind('keydown', function(e) {
        var $self = $(this),
            dimen = $.extend($self.position(), { 
            width:  $self.outerWidth(),
            height: $self.outerHeight()
        });

        if( e.which === 13 && $.trim(this.value).length ) {
            $('<div>', {
                 class: 'someclass',
         id: 'tagcontrol'+i,
         text: this.value,
                 css: {
                     position:   'relative',
                     width:      '400px',
                     height:     dimen.height,
                     left:       dimen.left,
                     top:        '-30px'
                 }
            }).appendTo($self.parent());
            $('<input type="range" min="0" max="10" step="1" value="5" style="position:relative;top:0px;left:20px;" onchange="showValue(this.value,'+i+')"><text style="position:relative;top:0px;left:25px" id="range'+i+'">5</text><div id="tag'+i+'" class="tag" style="position:relative;top:-20px;left:200px;width:70px;height:14px;" onclick="deletetag('+i+')">Delete</div>').appendTo($('div.someclass:last')) ; i+=1
            $self.val('').css('position', 'relative').animate({top: '+=30'}, 200);
        }
    });

  function deletetag(i){
                 $('div').remove('#tagcontrol'+i);
                 $('.moving').css('position','relative').animate({top:'-=30'},200);
  }

  function deletetag2(i){
                 $('div').remove('#tagcontrol'+i);
  }

